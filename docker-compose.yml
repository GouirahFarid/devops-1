# Use the up.sh to run this stack. It uses the production images on your local machine.
version: "3.8"
services:
  proxy:
    build:
      context: .
      dockerfile: ./Dockerfile.proxy
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./deployment/config/proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - nuxt-app
      - nginx
  nuxt-app:
    build:
      args:
        API_BASE_URL: http://localhost:8000
      context: .
      dockerfile: ./nuxt-app/Dockerfile
      target: dev
    restart: unless-stopped
    ports:
      - "3005:3000"
    volumes:
      - ./nuxt-app:/usr/src
    environment:
      - NODE_ENV=development
  #      - API_BASE_URL=http://localhost:8000
  api:
    build:
      args:
        user: martin
        uid: 1000
      context: .
      dockerfile: ./api/Dockerfile
      target: api
    restart: unless-stopped
    volumes:
      - ./api/app:/usr/src/app
      - ./api/config:/usr/src/config
      - ./api/database:/usr/src/database
      - ./api/routes:/usr/src/routes
      - ./api/storage:/usr/src/storage
      - ./api/tests:/usr/src/tests
      - ./api/composer.json:/usr/src/composer.json
      - ./api/composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
      - ./deployment/config/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    restart: unless-stopped
    volumes:
      - ./api:/usr/src
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api


